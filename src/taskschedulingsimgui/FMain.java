/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package taskschedulingsimgui;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author ljubo
 */
public class FMain extends javax.swing.JFrame {

    /**
     * Creates new form FMain
     */
    public FMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAddFixed = new javax.swing.JButton();
        btnAddRandomTask = new javax.swing.JButton();
        btnRemoveTask = new javax.swing.JButton();
        btnStart = new javax.swing.JButton();
        tfRepetitions = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lInputSet = new javax.swing.JList();
        mainMenu = new javax.swing.JMenuBar();
        mmFile = new javax.swing.JMenu();
        mmLoadFromFile = new javax.swing.JMenuItem();
        mmSaveToFile = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Task Scheduling Sim");

        jLabel1.setText("Input Set");

        btnAddFixed.setText("Add Fixed Task");

        btnAddRandomTask.setText("Add Random Task");

        btnRemoveTask.setText("Remove Task");
        btnRemoveTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveTaskActionPerformed(evt);
            }
        });

        btnStart.setText("Start");

        tfRepetitions.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        tfRepetitions.setText("1");

        jLabel2.setText("Repetitions");

        jScrollPane2.setViewportView(lInputSet);

        mmFile.setText("File");

        mmLoadFromFile.setText("Load From File");
        mmLoadFromFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmLoadFromFileActionPerformed(evt);
            }
        });
        mmFile.add(mmLoadFromFile);

        mmSaveToFile.setText("Save To File");
        mmSaveToFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmSaveToFileActionPerformed(evt);
            }
        });
        mmFile.add(mmSaveToFile);

        mainMenu.add(mmFile);

        setJMenuBar(mainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddRandomTask, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                            .addComponent(btnRemoveTask, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddFixed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfRepetitions)))
                        .addContainerGap())
                    .addComponent(jLabel1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddFixed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddRandomTask)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveTask)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 253, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tfRepetitions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mmLoadFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmLoadFromFileActionPerformed
        JFileChooser openFile = new JFileChooser();
        int ret = openFile.showOpenDialog(null);
        
        if (ret == JFileChooser.APPROVE_OPTION) {
             loadInputFile(openFile.getSelectedFile());
        }
    }//GEN-LAST:event_mmLoadFromFileActionPerformed

    private void btnRemoveTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveTaskActionPerformed
        DefaultListModel dlm = (DefaultListModel) lInputSet.getModel();
        dlm.removeElementAt(lInputSet.getSelectedIndex());
    }//GEN-LAST:event_btnRemoveTaskActionPerformed

    private void mmSaveToFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmSaveToFileActionPerformed
        JFileChooser saveFile = new JFileChooser();
        int ret = saveFile.showOpenDialog(null);
        
        if (ret == JFileChooser.APPROVE_OPTION) {
            try (PrintWriter writer = new PrintWriter(saveFile.getSelectedFile())) {
                DefaultListModel dlm = (DefaultListModel)lInputSet.getModel();
                writer.println(dlm.size());
                
                for (int iCount = 0; iCount < dlm.size(); iCount++) {
                    writer.println(dlm.get(iCount));
                }   
                
                writer.println(tfRepetitions.getText());
            } catch (FileNotFoundException ex) {
                Logger.getLogger(FMain.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error saving file!");
            } finally {
                JOptionPane.showMessageDialog(this, "File saved.");
            }
        }
    }//GEN-LAST:event_mmSaveToFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FMain().setVisible(true);
            }
        });
    }
    
    private void loadInputFile(File f) {
        try {
            Scanner scan = new Scanner(f);
            scan.nextLine();
            
            DefaultListModel dlm = new DefaultListModel();
            
            while (scan.hasNextLine()) {
                dlm.addElement(scan.nextLine());
            }
            
            dlm.removeElementAt(dlm.size() - 1);
            
            lInputSet.setModel(dlm);
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FMain.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("File not found");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFixed;
    private javax.swing.JButton btnAddRandomTask;
    private javax.swing.JButton btnRemoveTask;
    private javax.swing.JButton btnStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lInputSet;
    private javax.swing.JMenuBar mainMenu;
    private javax.swing.JMenu mmFile;
    private javax.swing.JMenuItem mmLoadFromFile;
    private javax.swing.JMenuItem mmSaveToFile;
    private javax.swing.JTextField tfRepetitions;
    // End of variables declaration//GEN-END:variables
}
