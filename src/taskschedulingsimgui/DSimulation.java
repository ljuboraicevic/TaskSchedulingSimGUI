package taskschedulingsimgui;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.DefaultListModel;

/**
 *
 * @author Ljubo Raicevic <rljubo90@gmail.com>
 */
public class DSimulation extends javax.swing.JDialog {

    private final String directory;
    private final String algorithm;
    private final String type;
    private final String repetitions;
    private Timer t;
    
    /**
     * Creates new form DSimulation
     */
    public DSimulation(
            java.awt.Frame parent, 
            boolean modal,
            String directory,
            String algorithm,
            String type,
            String repetitions) {
        super(parent, modal);
        
        this.directory = directory;
        this.algorithm = algorithm;
        this.type = type;
        this.repetitions = repetitions;
        
        initComponents();
        
        lblRepetitions.setText("/" + repetitions);
        deleteFilesFromTraceDir();
        
        t = new Timer();
        t.scheduleAtFixedRate(new TimerTask() {

            @Override
            public void run() {
                lTraceFiles.setModel(getTraceFiles());
                lblProgress.setText(Integer.toString(lTraceFiles.getModel().getSize()));
            }
        }, 0, 5000);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        taOutput = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        lTraceFiles = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        btnStartSimulation = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblProgress = new javax.swing.JLabel();
        lblRepetitions = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Simulation");

        taOutput.setColumns(20);
        taOutput.setRows(5);
        jScrollPane1.setViewportView(taOutput);

        jScrollPane2.setViewportView(lTraceFiles);

        jLabel1.setText("Trace files generated by simulations:");

        btnStartSimulation.setText("START SIMULATION");
        btnStartSimulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartSimulationActionPerformed(evt);
            }
        });

        jLabel2.setText("<html>Combined result statistics for all repetitions of the simulation<br>\n(displayed when all repetitions of the simulation are finished):</html>");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText("Progress:");

        lblProgress.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblProgress.setText("0");

        lblRepetitions.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblRepetitions.setText("/repetitions");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addComponent(btnStartSimulation)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblProgress)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(lblRepetitions))))
                                .addGap(0, 270, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnStartSimulation)
                    .addComponent(jLabel3)
                    .addComponent(lblProgress)
                    .addComponent(lblRepetitions))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartSimulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartSimulationActionPerformed
        new Thread(new Runnable() {
            public void run() {
                taOutput.setText(executeSimulation(directory, algorithm, type, repetitions));
            }
        }).start();
    }//GEN-LAST:event_btnStartSimulationActionPerformed

    private String executeSimulation(
            String dir, 
            String algorithm, 
            String type, 
            String repetitions) {
        
        StringBuilder output = new StringBuilder();
	Process p;
        
        deleteFilesFromTraceDir();
        
	try {
            String command = "java -jar " + System.getProperty("user.dir") 
                    + File.separator + "TaskSchedulingSimulator.jar 1 "  
                    + "SIMULATION " 
                    + algorithm + " " 
                    + type + " "
                    + repetitions; 
            
            System.out.println(command);
            p = Runtime.getRuntime().exec(command);
            p.waitFor();
            BufferedReader reader = 
                new BufferedReader(new InputStreamReader(p.getInputStream()));

            String line = "";			
            while ((line = reader.readLine())!= null) {
                    output.append(line).append("\n");
            }
            
        } catch (IOException | InterruptedException e) { }
        
        return output.toString();
    }
    
    private DefaultListModel getTraceFiles() {
        File traceDir = new File("io/trace");
        File[] files = traceDir.listFiles();
        Arrays.sort(files);
        
        DefaultListModel dlm = new DefaultListModel();
        for (File f: files) {
            dlm.addElement(f.getName());
        }
        
        return dlm;
    }
    
    private void deleteFilesFromTraceDir() {
        File traceDir = new File("io/trace");
        File[] files = traceDir.listFiles();
        for (File f: files) {
            f.delete();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStartSimulation;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lTraceFiles;
    private javax.swing.JLabel lblProgress;
    private javax.swing.JLabel lblRepetitions;
    private javax.swing.JTextArea taOutput;
    // End of variables declaration//GEN-END:variables
}